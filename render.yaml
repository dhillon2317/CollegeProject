services:
  - type: web
    name: complaint-analyzer
    env: python
    buildCommand: |
      # Set Python path
      export PYTHONPATH="${PYTHONPATH}:/opt/render/project/src"
      
      # Print working directory for debugging
      echo "Current working directory: $(pwd)"
      echo "Contents of current directory:"
      ls -la
      
      # Check if models directory exists
      echo "Checking for models directory..."
      if [ -d "sbackend/camplaint-analyzer/models" ]; then
        echo "Models directory found at sbackend/camplaint-analyzer/models"
        echo "Contents of models directory:"
        ls -la sbackend/camplaint-analyzer/models/
      else
        echo "ERROR: Models directory not found!"
        echo "Current directory structure:"
        find . -type d | sort
      fi
      
      # Update pip and install build tools
      python -m pip install --upgrade pip
      pip install --no-cache-dir -U setuptools wheel
      
      # Install the package in development mode (this is crucial)
      pip install -e .
      
      # Install requirements from complaint-analyzer directory
      pip install --no-cache-dir -r sbackend/camplaint-analyzer/requirements.txt
      
      # Download NLTK data
      echo "Downloading NLTK data..."
      python -c "import nltk; nltk.download('punkt', quiet=True)"
      
      # Install Node.js and npm
      curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
      apt-get install -y nodejs
      
      # Install frontend dependencies and build
      echo "Building React frontend..."
      cd frontend/complain-analyzer-ai
      npm install
      npm run build
      cd ../..
      
      # Retrain models to ensure compatibility
      echo "Retraining models to ensure compatibility..."
      cd sbackend/camplaint-analyzer
      python train.py
      cd ../..
      
      # Download spaCy model
      python -m spacy download en_core_web_sm --no-cache
      
      # Verify the models are in the correct location
      echo "Verifying model files in the final build..."
      if [ -f "sbackend/camplaint-analyzer/models/category_model.pkl" ]; then
        echo "Category model found!"
      else
        echo "ERROR: Category model not found!"
      fi
      
    startCommand: "gunicorn --bind :$PORT --workers 1 --threads 2 --timeout 120 wsgi:application"
    
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: PYTHONUNBUFFERED
        value: 1
      - key: PORT
        value: 10000
      - key: PYTHONPATH
        value: /opt/render/project/src
    
    plan: free
    healthCheckPath: /health
