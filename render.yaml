services:
  - type: web
    name: complaint-analyzer
    env: python
    buildCommand: |
      #!/bin/bash
      set -e  # Exit on error
      
      # Set Python path
      export PYTHONPATH="${PYTHONPATH}:/opt/render/project/src"
      
      # Print working directory for debugging
      echo "Current working directory: $(pwd)"
      echo "Contents of current directory:"
      ls -la
      
      # Check if models directory exists
      echo "Checking for models directory..."
      echo "Current directory: $(pwd)"
      echo "Looking for models in: sbackend/camplaint-analyzer/models/"
      
      # Check if the path exists
      if [ -d "sbackend/camplaint-analyzer/models" ]; then
        echo "✅ Models directory found at sbackend/camplaint-analyzer/models/"
        echo "📂 Contents of models directory:"
        ls -la sbackend/camplaint-analyzer/models/
        
        # Check for specific model files
        if [ -f "sbackend/camplaint-analyzer/models/category_model.pkl" ]; then
          echo "✅ Found category_model.pkl"
        else
          echo "❌ category_model.pkl not found in models directory"
        fi
      else
        echo "❌ ERROR: Models directory not found at sbackend/camplaint-analyzer/models/"
        echo "📂 Current directory structure (top level):"
        ls -la
        echo "🔍 Full directory structure:"
        find . -type d | sort
      fi
      
      # Update pip and install build tools
      python -m pip install --upgrade pip
      pip install --no-cache-dir -U setuptools wheel
      
      # Install Python dependencies first
      pip install --no-cache-dir -r sbackend/camplaint-analyzer/requirements.txt
      
      # Install spacy and download model
      pip install --no-cache-dir spacy
      python -m spacy download en_core_web_sm --no-cache
      
      # Download NLTK data
      echo "Downloading NLTK data..."
      python -c "import nltk; nltk.download('punkt', quiet=True)"
      
      # Install Node.js using nvm (no root required)
      echo "Installing Node.js..."
      # Create necessary directories and files for nvm
      mkdir -p ~/.nvm
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # Load nvm if exists
      
      # Install nvm if not already installed
      if ! command -v nvm &> /dev/null; then
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # Load nvm after install
      fi
      
      # Install Node.js 16 (more stable for this project)
      nvm install 16.20.2
      node -v
      npm -v
      
      # Install frontend dependencies and build
      echo "Building React frontend..."
      cd frontend/complain-analyzer-ai
      
      # Clean up any existing node_modules and lock files
      rm -rf node_modules package-lock.json .next
      
      # Clear npm cache
      npm cache clean --force
      
      # Set NODE_OPTIONS before installing
      export NODE_OPTIONS=--openssl-legacy-provider
      
      # Install dependencies
      npm install --legacy-peer-deps --force
      
      # Build the frontend with production settings and legacy provider
      NODE_OPTIONS=--openssl-legacy-provider npm run build
      
      cd ../..
      
      # Verify the models are in the correct location
      echo "Verifying model files in the final build..."
      if [ -f "sbackend/camplaint-analyzer/models/category_model.pkl" ]; then
        echo "Category model found!"
      else
        echo "Warning: Category model not found!"
      fi
    startCommand: "gunicorn --bind :$PORT --workers 1 --threads 2 --timeout 120 wsgi:application"
    
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
{{ ... }}
        value: 1
      - key: PORT
        value: 10000
      - key: PYTHONPATH
        value: /opt/render/project/src
    
    plan: free
    healthCheckPath: /health
